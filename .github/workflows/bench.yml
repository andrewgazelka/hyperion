name: Build

on:
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  runBenchmark:
    name: run benchmark
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
          
      - uses: boa-dev/criterion-compare-action@v3

#jobs:
#  machete:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Install cargo-machete
#        uses: baptiste0928/cargo-install@v3
#        with:
#          crate: cargo-machete
#
#      - name: Run cargo machete
#        run: |
#          cargo machete
#
#  test:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#        with:
#          lfs: true
#
#      - name: Setup Rust toolchain and cache
#        uses: actions-rust-lang/setup-rust-toolchain@v1
#
#      - name: Run cargo test
#        run: cargo test --workspace --all-features
#
#  deny:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Install cargo-deny
#        uses: baptiste0928/cargo-install@v3
#        with:
#          crate: cargo-deny
#
#      - name: Run cargo deny
#        run: |
#          cargo deny check
#
#  fmt:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Setup Rust toolchain and cache
#        uses: actions-rust-lang/setup-rust-toolchain@v1
#        with:
#          toolchain: nightly
#          components: rustfmt
#
#      - name: Run rustfmt
#        run: |
#          cargo +nightly fmt --all -- --check
#  clippy:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#        with:
#          lfs: true
#
#      - name: Setup Rust toolchain and cache
#        uses: actions-rust-lang/setup-rust-toolchain@v1
#        with:
#          toolchain: nightly
#          components: clippy
#
#      - name: Clippy check
#        run: cargo clippy --workspace --tests --examples --all-features
#
#
