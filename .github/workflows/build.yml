name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  merge_group:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUST_TOOLCHAIN: nightly-2024-11-29

jobs:
  machete:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install cargo-machete
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-machete

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Run cargo machete
        run: |
          cargo machete --fix

      - name: Run cargo machete and fix
        run: |
          if cargo machete-full fix; then
            if [[ -n $(git status --porcelain) ]]; then
              git add .
                git commit -m "chore: remove unused dependencies (cargo-machete)"
              git push
            fi
          fi

  fmt:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt
          toolchain: ${{ env.RUST_TOOLCHAIN }}

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Run rustfmt and fix
        run: |
          cargo fmt --all
          if [[ -n $(git status --porcelain) ]]; then
            git add .
            git commit -m "chore: apply rustfmt changes"
            git push
          fi

  clippy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: clippy
          cache-on-failure: true

      - name: Clippy check
        run: cargo clippy --workspace --benches --tests --examples --all-features -- -D warnings

#  check:
#    strategy:
#      matrix:
#        os: [ubuntu-latest, windows-latest, macos-latest]
#    runs-on: ${{ matrix.os }}
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Setup Rust toolchain
#        uses: actions-rust-lang/setup-rust-toolchain@v1
#        with:
#          toolchain: ${{ env.RUST_TOOLCHAIN }}
#
#      - uses: Swatinem/rust-cache@v2
#        with:
#          cache-on-failure: true
#
#      - name: Cargo check
#        run: cargo check --workspace --all-features
