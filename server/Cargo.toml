[package]
name = "server"
version = "0.1.0"
edition = "2021"
authors = ["Andrew Gazelka <andrew.gazelka@gmail.com>"]
readme = "README.md"
publish = false

[features]
trace = []
full = ["trace"]
pprof = ["dep:pprof"]


[dependencies]
anyhow = "1.0.81"
tracing = "0.1.40"
serde_json = "1.0.114"
bytes = "1.6.0"

# get terminated by signal SIGBUS (Misaligned address error) without frame-pointer
pprof = { version =  "0.13.0", optional = true , features = ["flamegraph", "frame-pointer"] }

valence_protocol = { git = "https://github.com/valence-rs/valence" }
valence_registry = { git = "https://github.com/valence-rs/valence" }

generator.workspace = true

chunk.workspace = true


# no secure alloc
sha2 = "0.10.8"
itertools = "0.12.1"
rand = "0.8.5"
evenio = { git = "https://github.com/andrewgazelka/evenio", features = ["rayon"], branch = "fix-collisions-gt-2" }
flume = "0.11.0"

# todo: how much will adding "sync" wakers hurt performance?
monoio = { version = "0.2.3", features = ["sync"] }
signal-hook = "0.3.17"
base64 = "0.22.0"
uuid = "1.8.0"
rand_distr = "0.4.3"
smallvec = { git = "https://github.com/servo/rust-smallvec" }
fnv = "1.0.7"
rayon = "1.10.0"
tracing-subscriber = { version = "0.3.18", features = ["env-filter"] }
tracing-flame = "0.2.0"
ndarray = "0.15.6"
ndarray-stats = "0.5.1"
jemallocator = "0.5.4"
jemalloc-ctl = "0.5.4"

# removing this because jemalloc-ctl is nice for memory stats also
# https://github.com/rust-lang/rust-analyzer/issues/1441#issuecomment-509506279
# jemalloc uses significantly less memory
#mimalloc = { version = "0.1.39" , default-features = false }


[lints.rust]
warnings = "deny"

[lints.clippy]
# cargo
cargo_common_metadata = "allow"
#multiple_crate_versions = "warn"
negative_feature_names = "deny"
redundant_feature_names = "deny"
wildcard_dependencies = "deny"

restriction = { level = "deny", priority = -1 }
missing_docs_in_private_items = "allow"
question_mark_used = "allow"
print_stdout = "allow"
implicit_return = "allow"
shadow_reuse = "allow"
absolute_paths = "allow"
use_debug = "allow"
unwrap_used = "allow"
std_instead_of_alloc = "allow" # consider denying
default_numeric_fallback = "allow"
as_conversions = "allow"
arithmetic_side_effects = "allow"
shadow_unrelated = "allow"
else_if_without_else = "allow"
float_arithmetic = "allow"
single_call_fn = "allow"
missing_inline_in_public_items = "allow"
exhaustive_structs = "allow"
pub_use = "allow"
let_underscore_untyped = "allow"
infinite_loop = "allow"
single_char_lifetime_names = "allow"
min_ident_chars = "allow"
std_instead_of_core = "allow"
items_after_statements = "allow"
shadow_same = "allow"
let_underscore_must_use = "allow"
mod_module_files = "deny"
self_named_module_files = "allow"
pattern_type_mismatch = "allow"
integer_division = "allow"
separated_literal_suffix = "allow"
unseparated_literal_suffix = "deny"
integer_division_remainder_used = "allow"
str_to_string = "allow"
missing_assert_message = "allow"
multiple_inherent_impl = "allow"
missing_trait_methods = "allow"

complexity = { level = "deny", priority = -1 }
type_complexity = "allow"

nursery = { level = "deny", priority = -1 }
future_not_send = "allow"

pedantic = { level = "deny", priority = -1 }
uninlined_format_args = "allow" # consider denying; this is allowed because Copilot often generates code that triggers this lint
needless_pass_by_value = "allow" # consider denying
cast_lossless = "allow"
cast_possible_truncation = "allow" # consider denying
cast_precision_loss = "allow" # consider denying
missing_errors_doc = "allow" # consider denying
wildcard_imports = "allow"
non_ascii_literal = "allow"

perf = "deny"

style = "deny"

suspicious = { level = "deny", priority = -1 }
blanket_clippy_restriction_lints = "allow"

[dev-dependencies]
#criterion = { version = "0.5.1", features = ["html_reports"] }
divan = "0.1.14"
#tango-bench = "0.4.0"
#iai = "0.1"
#iai-callgrind = "0.10.2"
thread-priority = "0.16.0"


[[bench]]
name = "many_zombies"
harness = false
